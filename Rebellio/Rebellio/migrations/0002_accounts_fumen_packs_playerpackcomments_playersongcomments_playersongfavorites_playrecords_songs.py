# Generated by Django 3.1 on 2020-08-25 14:23

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Rebellio', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accounts',
            fields=[
                ('accountname', models.CharField(blank=True, db_column='AccountName', max_length=50, null=True)),
                ('passwd', models.CharField(blank=True, db_column='Passwd', max_length=41, null=True)),
                ('nickname', models.CharField(blank=True, db_column='Nickname', max_length=50, null=True)),
                ('accesslevel', models.IntegerField(blank=True, db_column='AccessLevel', null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Accounts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Fumen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fumen_id', models.PositiveIntegerField(unique=True)),
                ('artist_name', models.CharField(max_length=50)),
                ('music_name', models.CharField(max_length=50)),
                ('version', models.PositiveIntegerField()),
                ('bpm_max', models.PositiveIntegerField()),
                ('bpm_min', models.PositiveIntegerField()),
                ('basic_level', models.PositiveIntegerField()),
                ('medium_level', models.PositiveIntegerField()),
                ('hard_level', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'fumen',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Playerpackcomments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accountname', models.CharField(db_column='AccountName', max_length=50)),
                ('packid', models.IntegerField(db_column='PackID')),
                ('comment', models.TextField(blank=True, db_column='Comment', null=True)),
                ('createtime', models.DateTimeField(blank=True, db_column='CreateTime', null=True)),
                ('updatetime', models.DateTimeField(blank=True, db_column='UpdateTime', null=True)),
            ],
            options={
                'db_table': 'PlayerPackComments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Playersongcomments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accountname', models.CharField(db_column='AccountName', max_length=50)),
                ('songid', models.IntegerField(db_column='SongID')),
                ('comment', models.TextField(blank=True, db_column='Comment', null=True)),
                ('createtime', models.DateTimeField(auto_now_add=True, db_column='CreateTime')),
                ('updatetime', models.DateTimeField(auto_now=True, db_column='UpdateTime')),
            ],
            options={
                'db_table': 'PlayerSongComments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Playrecords',
            fields=[
                ('accountname', models.CharField(blank=True, db_column='AccountName', max_length=50, null=True)),
                ('songid', models.IntegerField(blank=True, db_column='SongID', null=True)),
                ('difficulty', models.IntegerField(blank=True, db_column='Difficulty', null=True)),
                ('logtime', models.DateTimeField(blank=True, db_column='LogTime', null=True)),
                ('score', models.IntegerField(blank=True, db_column='Score', null=True)),
                ('jr', models.IntegerField(blank=True, db_column='JR', null=True)),
                ('note', models.IntegerField(blank=True, db_column='Note', null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Playrecords',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Songs',
            fields=[
                ('songid', models.IntegerField(db_column='SongID', primary_key=True, serialize=False)),
                ('category', models.IntegerField(blank=True, db_column='Category', null=True)),
                ('packid', models.IntegerField(blank=True, db_column='PackID', null=True)),
                ('accesslevel', models.IntegerField(blank=True, db_column='AccessLevel', null=True)),
                ('creator', models.TextField(blank=True, db_column='Creator', null=True)),
                ('title', models.TextField(blank=True, db_column='Title', null=True)),
                ('artist', models.TextField(blank=True, db_column='Artist', null=True)),
                ('chartauthor', models.TextField(blank=True, db_column='ChartAuthor', null=True)),
                ('diffb', models.IntegerField(blank=True, db_column='diffB', null=True)),
                ('diffm', models.IntegerField(blank=True, db_column='diffM', null=True)),
                ('diffh', models.IntegerField(blank=True, db_column='diffH', null=True)),
                ('diffsp', models.IntegerField(blank=True, db_column='diffSP', null=True)),
                ('subdiffb', models.IntegerField(blank=True, db_column='subdiffB', null=True)),
                ('subdiffm', models.IntegerField(blank=True, db_column='subdiffM', null=True)),
                ('subdiffh', models.IntegerField(blank=True, db_column='subdiffH', null=True)),
                ('subdiffsp', models.IntegerField(blank=True, db_column='subdiffSP', null=True)),
                ('hasspecial', models.IntegerField(blank=True, db_column='HasSpecial', null=True)),
                ('specialid', models.IntegerField(blank=True, db_column='SpecialID', null=True)),
                ('sequencepid', models.IntegerField(blank=True, db_column='SequencePID', null=True)),
                ('createtime', models.DateTimeField(blank=True, db_column='CreateTime', null=True)),
                ('updatetime', models.DateTimeField(blank=True, db_column='UpdateTime', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('authordescription', models.TextField(blank=True, db_column='AuthorDescription', null=True)),
            ],
            options={
                'db_table': 'Songs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Playersongfavorites',
            fields=[
                ('accountname', models.CharField(db_column='AccountName', max_length=50, primary_key=True, serialize=False)),
                ('songid', models.IntegerField(db_column='SongID')),
                ('isfavorite', models.IntegerField(db_column='IsFavorite')),
                ('createtime', models.DateTimeField(blank=True, db_column='CreateTime', null=True)),
                ('updatetime', models.DateTimeField(blank=True, db_column='UpdateTime', null=True)),
            ],
            options={
                'db_table': 'PlayerSongFavorites',
                'managed': True,
                'unique_together': {('accountname', 'songid')},
            },
        ),
        migrations.CreateModel(
            name='Packs',
            fields=[
                ('category', models.PositiveIntegerField(db_column='Category', primary_key=True, serialize=False)),
                ('packid', models.IntegerField(db_column='PackID')),
                ('title', models.TextField(blank=True, db_column='Title', null=True)),
                ('comment', models.TextField(blank=True, db_column='Comment', null=True)),
                ('haspromotion', models.IntegerField(blank=True, db_column='HasPromotion', null=True)),
                ('previewsongid', models.PositiveIntegerField(blank=True, db_column='PreviewSongID', null=True)),
                ('createtime', models.DateTimeField(blank=True, db_column='CreateTime', null=True)),
            ],
            options={
                'db_table': 'Packs',
                'managed': True,
                'unique_together': {('category', 'packid')},
            },
        ),
    ]
